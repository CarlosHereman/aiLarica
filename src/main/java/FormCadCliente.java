// Nome: Abner do Nascimento Santos - RA: 2504154 
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class FormCadCliente extends javax.swing.JFrame {

    private Cliente cliente;
    private BDClasses gerClient = BDClasses.getInstance();

    private static FormCadCliente cadClientUnico;
    
    private FormCadCliente() {
        initComponents();
    }
    
    //MÉTODO SINGLETON
    public static FormCadCliente getCadClient(){
        if(cadClientUnico == null){
            cadClientUnico = new FormCadCliente();
            System.out.println("\nCADCLIENT NOVO");
        }
        else{
            System.out.println("\nCADCLIENT VELHO");
        }
        return cadClientUnico;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        cxNome = new javax.swing.JTextField();
        btLimpar = new javax.swing.JButton();
        btSair = new javax.swing.JButton();
        btCadClient = new javax.swing.JButton();
        btConsClientCpf = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClient = new javax.swing.JTable();
        btAltClientCpf = new javax.swing.JButton();
        rtCpf = new javax.swing.JLabel();
        btExcluirClientCpf = new javax.swing.JButton();
        cxCpf = new javax.swing.JTextField();
        rtNome = new javax.swing.JLabel();
        rtTel = new javax.swing.JLabel();
        cxTel = new javax.swing.JTextField();
        rtEnd = new javax.swing.JLabel();
        cxEnd = new javax.swing.JTextField();
        rtEmail = new javax.swing.JLabel();
        cxEmail = new javax.swing.JTextField();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Cliente");

        btLimpar.setText("Limpar");
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });

        btSair.setText("Sair");
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });

        btCadClient.setText("Cadastrar");
        btCadClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCadClientActionPerformed(evt);
            }
        });

        btConsClientCpf.setText("Consultar CPF");
        btConsClientCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsClientCpfActionPerformed(evt);
            }
        });

        tblClient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "CPF", "NOME", "TELEFONE", "ENDEREÇO", "E-MAIL"
            }
        ));
        jScrollPane1.setViewportView(tblClient);
        if (tblClient.getColumnModel().getColumnCount() > 0) {
            tblClient.getColumnModel().getColumn(3).setPreferredWidth(150);
            tblClient.getColumnModel().getColumn(4).setPreferredWidth(150);
        }

        btAltClientCpf.setText("Alterar pelo CPF");
        btAltClientCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAltClientCpfActionPerformed(evt);
            }
        });

        rtCpf.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rtCpf.setText("CPF:");

        btExcluirClientCpf.setText("Excluir por CPF");
        btExcluirClientCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirClientCpfActionPerformed(evt);
            }
        });

        rtNome.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rtNome.setText("Nome: ");

        rtTel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rtTel.setText("Telefone:");

        cxTel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxTelActionPerformed(evt);
            }
        });

        rtEnd.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rtEnd.setText("Endereço:");

        rtEmail.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rtEmail.setText("E-mail:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rtEmail)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rtEnd)
                                    .addComponent(rtTel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rtCpf)
                                    .addComponent(rtNome))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cxEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                                    .addComponent(cxNome)
                                    .addComponent(cxCpf)
                                    .addComponent(cxTel)
                                    .addComponent(cxEnd)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btLimpar)
                                .addGap(36, 36, 36)
                                .addComponent(btSair)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 23, Short.MAX_VALUE)
                        .addComponent(btCadClient)
                        .addGap(57, 57, 57)
                        .addComponent(btConsClientCpf)
                        .addGap(54, 54, 54)
                        .addComponent(btAltClientCpf)
                        .addGap(61, 61, 61)
                        .addComponent(btExcluirClientCpf)
                        .addGap(24, 24, 24))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rtNome)
                    .addComponent(cxNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rtCpf)
                    .addComponent(cxCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rtTel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cxTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rtEnd)
                    .addComponent(cxEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rtEmail)
                    .addComponent(cxEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCadClient)
                    .addComponent(btConsClientCpf)
                    .addComponent(btAltClientCpf)
                    .addComponent(btExcluirClientCpf))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btLimpar)
                    .addComponent(btSair))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        limpar();
    }//GEN-LAST:event_btLimparActionPerformed

    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
        sair();
    }//GEN-LAST:event_btSairActionPerformed

    private void btCadClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadClientActionPerformed
        cadastrar();
        listarTab();
    }//GEN-LAST:event_btCadClientActionPerformed

    private void btConsClientCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsClientCpfActionPerformed
        consultar();
    }//GEN-LAST:event_btConsClientCpfActionPerformed

    private void btAltClientCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAltClientCpfActionPerformed
        alterar();
        listarTab();
    }//GEN-LAST:event_btAltClientCpfActionPerformed

    private void btExcluirClientCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirClientCpfActionPerformed
        excluir();
        listarTab();
    }//GEN-LAST:event_btExcluirClientCpfActionPerformed

    private void cxTelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxTelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cxTelActionPerformed

       public void excluir(){
        cliente = new Cliente();
      
         try{
            cliente.setCpf(cxCpf.getText());
            
            cliente = gerClient.consClientCpf(cliente);
         
            if(cliente != null){
                
                cxCpf.setText(Long.toString(cliente.getCpf()));
                cxNome.setText(cliente.getNome());
                
                int x = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir o Cliente?", "Exclusão de Cliente", JOptionPane.YES_NO_CANCEL_OPTION);
                if(x == 0){
                    gerClient.removeClientCod(cliente);
                    JOptionPane.showMessageDialog(null, "Cliente removido com sucesso!", "Remoção de Cliente", 1);
                    limpar();
                }
            }
            else{
              JOptionPane.showMessageDialog(null, "Não existe cliente com este CPF!", "Cliente inexistente", 0);
              cxCpf.setText("");
             cxCpf.requestFocus();
            }
        } //fim try
        catch(NumberFormatException nfe){
            JOptionPane.showMessageDialog(null, "O CPF deve ser um inteiro!", "ERRO de CPF", 0);
            cxCpf.setText("");
            cxCpf.requestFocus();
        } //fim catch

    
    }
    
    public void alterar(){
        cliente = new Cliente();
      
         try{
            cliente.setCpf(cxCpf.getText());
                
            cliente = gerClient.atualizaClientCod(cliente);
         
            if(cliente != null){
                JOptionPane.showMessageDialog(null, "Cliente atualizado!", "Cliente Atualizado", 1);
                limpar();
             }
            else{
              JOptionPane.showMessageDialog(null, "Não existe cliente com este CPF!", "Cliente inexistente", 0);
              cxCpf.setText("");
              cxCpf.requestFocus();
            }
        } 
        catch(NumberFormatException nfe){
            JOptionPane.showMessageDialog(null, "O CPF deve ser um inteiro!", "ERRO de CPF", 0);
            cxCpf.setText("");
            cxCpf.requestFocus();
        } //fim catch
    }
    public void listarTab(){
        DefaultTableModel modelo = (DefaultTableModel) tblClient.getModel();
        
        int posLin = 0;
        modelo.setRowCount(posLin);
        
        for(Cliente client : gerClient.getBdClient()){
            modelo.insertRow(posLin, new Object[]{client.getCpf(), client.getNome(), client.getTel(), client.getEnd(), client.getEmail()});
            posLin++;
        }
    }
    
        public void consultar(){
        cliente = new Cliente();
      
         try{
            cliente.setCpf(cxCpf.getText());
                
            cliente = gerClient.consClientCpf(cliente);
         
         if(cliente != null){
            cxCpf.setText(Long.toString(cliente.getCpf()));
            cxNome.setText(cliente.getNome());
            cxTel.setText(Long.toString(cliente.getTel()));
            cxEnd.setText(cliente.getEnd());
            cxEmail.setText(cliente.getEmail());
            JOptionPane.showMessageDialog(null, "Confira os Dados do Cliente!", "Cliente encontrado", 1);
            limpar();
         }
         else{
            JOptionPane.showMessageDialog(null, "Não existe cliente com este CPF!", "Cliente inexistente", 0);
            cxCpf.setText("");
            cxCpf.requestFocus();
         }
        } //fim try
        catch(NumberFormatException nfe){
            JOptionPane.showMessageDialog(null, "O CPF deve ser um inteiro!", "ERRO de CPF", 0);
            cxCpf.setText("");
            cxCpf.requestFocus();
        } //fim catch
    }
    
    public void cadastrar(){
        cliente = new Cliente();
        try{
         cliente.setCpf(cxCpf.getText());
         cliente.setNome(cxNome.getText());
         cliente.setTel(cxTel.getText());
         cliente.setEnd(cxEnd.getText());
         cliente.setEmail(cxEmail.getText());
                 
         cliente = gerClient.cadClient(cliente);
         
         if(cliente != null){
            cliente.impDados();
            limpar();
         }
         else{
            JOptionPane.showMessageDialog(null, "Já existe um cliente com este CPF!", "ERRO de CPF", 0);
            cxCpf.setText("");
            cxCpf.requestFocus();
         }
        } 
        catch(NumberFormatException nfe){
            JOptionPane.showMessageDialog(null, "O CPF deve ser um inteiro!", "ERRO de CPF", 0);
            cxCpf.setText("");
            cxCpf.requestFocus();
        }
        catch (LetterException le) {
            JOptionPane.showMessageDialog(null, "O Nome deve ser apenas letras!", "ERRO de Nome", 0);
            cxNome.setText("");
            cxNome.requestFocus();
        }
        catch (NumberException ne) {
            JOptionPane.showMessageDialog(null, "O Telefone deve ser um inteiro!", "ERRO de Telefone", 0);
            cxTel.setText("");
            cxTel.requestFocus();
        }
        catch (EmailException ee) {
            JOptionPane.showMessageDialog(null, "O E-mail deve ser valido!", "ERRO de E-mail", 0);
            cxEmail.setText("");
            cxEmail.requestFocus();
        }
        
        
    }
    
    public void sair(){
        int resp = JOptionPane.showConfirmDialog(null, "Deseja realmente sair?","Confirmar Saída", JOptionPane.YES_NO_CANCEL_OPTION);
        if(resp == 0){
            this.dispose();
        }
    }
    
    public void limpar(){
        cxCpf.setText("");
        cxNome.setText("");
        cxTel.setText("");
        cxEnd.setText("");
        cxEmail.setText("");
        cxCpf.requestFocus();
    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAltClientCpf;
    private javax.swing.JButton btCadClient;
    private javax.swing.JButton btConsClientCpf;
    private javax.swing.JButton btExcluirClientCpf;
    private javax.swing.JButton btLimpar;
    private javax.swing.JButton btSair;
    private javax.swing.JTextField cxCpf;
    private javax.swing.JTextField cxEmail;
    private javax.swing.JTextField cxEnd;
    private javax.swing.JTextField cxNome;
    private javax.swing.JTextField cxTel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel rtCpf;
    private javax.swing.JLabel rtEmail;
    private javax.swing.JLabel rtEnd;
    private javax.swing.JLabel rtNome;
    private javax.swing.JLabel rtTel;
    private javax.swing.JTable tblClient;
    // End of variables declaration//GEN-END:variables
}
